syntax = "proto3";

package pkg.proto.rule.v1;
option go_package = "github.com/myDevicesIoT/protos/pkg/proto/rule/v1;rule";

import "google/api/annotations.proto";
import "validate/validate.proto";
import "pkg/proto/rule/v1/types.proto";
import "pkg/proto/common/v1/common.proto";
import "google/protobuf/empty.proto";

service RuleService {
  // get rule
  rpc Get(GetRuleRequest) returns (GetRuleResponse) {
    option (google.api.http) = {
      get: "/v1/api/rules/{id}"
      response_body : "rule"
      additional_bindings {
        get: "/v1/api/rules/thing/{id}"
      }
    };
  }

  // list rules
  rpc List(ListRulesRequest) returns (ListRulesResponse) {
    option (google.api.http) = {
      get: "/v1/api/rules"
      response_body : "rules"
    };
  }

  // create rule
  rpc Create(CreatRuleRequest) returns (Rule) {
    option (google.api.http) = {
      post: "/v1/api/rules"
      body: "*"
    };
  };

  // update rule
  rpc Update(UpdateRuleRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			put: "/v1/api/rules/{rule.id}"
			body: "rule"
			additional_bindings: [
				{
					patch: "/v1/api/rules/{rule.id}"
					body: "rule"
				},
				{
					patch: "/v1/api/rules/{rule.id}"
					body: "*"
				}
			]
		};
  }
  
	rpc Delete(DeleteRuleRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/v1/api/rules/{id}"
    };
  }
}

message GetRuleRequest {
  string id = 1;
}

message GetRuleResponse {
  Rule rule = 1;
}

message ListRulesRequest {
  repeated string rules = 1;
  string application_id = 2;
  string account_id = 3;
  common.v1.PaginationParam pagination=4 [(validate.rules).message.required = true];
}

message ListRulesResponse {
  Rules rules = 1;
}

message CreatRuleRequest {
  Rule rule = 1;
}

message UpdateRuleRequest {
  Rule rule = 1;
}

message DeleteRuleRequest {
  string id = 1;
}
