syntax = "proto3";

package pkg.proto.reading.v1;
option go_package = "github.com/myDevicesIoT/protos/pkg/proto/reading/v1;proto";

import "google/api/annotations.proto";
import "validate/validate.proto";
import "pkg/proto/reading/v1/types.proto";
import "pkg/proto/common/v1/common.proto";

service ReadingService {
  /*
    get device state
  */
  rpc List(ListReadingsRequest) returns (ListReadingsResponse) {
    option (google.api.http) = {
      get: "/v1/api/devices/{device_id}/readings"
      response_body : "readings"
    };
  }
}


message ListReadingsRequest {
  common.v1.PaginationParam pagination=1 [(validate.rules).message.required = true];
  string device_id = 2 [(validate.rules).string.uuid = true];
  string type = 3 [(validate.rules).string = {in:["custom"]}];
  // 1606849292000 or 2017-06-17T00:00:00.000Z
  string start_date = 4 [(validate.rules).string = {
    pattern:   "^(\\d{13})|(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z)$",
  }];
  string end_date = 5 [(validate.rules).string = {
    pattern:   "^(\\d{13})|(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z)$",
  }];
  string units = 6;
  string event = 7 [(validate.rules).string = {in:["uplink", "downlink", ""]}];
}

message ListReadingsResponse {
  Readings readings = 1;
}
